#spring基本配置
spring.application.name=@engineCode@
spring.domain.name=DEV

# redis基于不同环境连接不同
spring.profile=@profile@
#app.version=dev-yl

spring.redis.dbindex=@spring.redis.database@
redis.server=@spring.redis.host@
redis.password=@spring.redis.password@
redis.port=@spring.redis.port@
spring.redis.ssl=false
redis.timeout=5000
spring.redis.jedis.pool.max-active=5

redis.pub.server=@redis.pub.server@
redis.pub.port=@redis.pub.port@
redis.pub.password=@redis.pub.password@
redis_current_sentinel=@redis.current.sentinel@



#编码格式
#强制开启EncodingFilter
spring.http.encoding.force=true
spring.http.encoding.charset=utf-8
spring.http.encoding.enabled=true
server.tomcat.uri-encoding=UTF-8
spring.main.allow-bean-definition-overriding=true

#配置容器相关参数
server.servlet.context-path=/
server.port=8080
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration,org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration,org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration,org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration


# actuator的访问路径
management.endpoints.web.base-path=/manage
# 上下文路径 配置的情况访问需要用 ip:port/mdf/manage/health
management.server.servlet.context-path=/mdf
#server 地址 设置127.0.0.1后 不允许远程管理连接:
#management.server.address=127.0.0.1
# 管理的端口调整成1234  如果不希望通过HTTP公开端点，则可以将管理端口设置为-1
management.server.port=-1
#关闭默认启用模式
management.endpoints.enabled-by-default = false
management.endpoint.info.enabled = true
management.endpoint.health.enabled = true
#http://ip:port/demo-prometheus/actuator/prometheus
management.endpoint.prometheus.enabled=true
management.endpoint.health.show-details=always
#暴露 端点配置 info,health,prometheus,custom
management.endpoints.web.exposure.include=info,health,prometheus,custom
#关闭默认配置的db检查
management.health.db.enabled=false
#关闭默认配置的redis检查
management.health.redis.enabled=false
# shutdown 可以关闭制定的端点
management.endpoint.shutdown.enabled=false

#国际化多语配置
spring.messages.basename=i18n/messages
spring.messages.cache-duration=3600
spring.messages.encoding=UTF-8

#rpc配置
access.key=@access.key@
access.secret=@access.secret@
spring.profiles.active=@profile@


# 启用iris
MWCLIENT_ENABLE=true
mw_profiles_active=@iris.profile@

# es 配置
# ucf.search.endpoint=@ucf.search.endpoint@
# ucf.search.tenantId.default=@ucf.search.tenantId.default@
# ucf.search.token.default=@ucf.search.token.default@

ucf.intellis.endpoint=@ucf.search.endpoint@
ucf.intellis.tenantId.default=jcdainut
ucf.search.token.default=9AE4EFF6A74E26AB8D7CF97CB48BF624

# 文件上传大小限制
spring.servlet.multipart.max-file-size=20MB
spring.servlet.multipart.max-request-size=20MB


#锁存活最大时间，单位秒,默认60
zklock.maxlocktime=60

#设置是否启用流水号缓存，默认启用
billcode.cacheenable=true
#表示缓存的最大数据量，默认10
billcode.cachemax=10
#表示缓存的最小数据量，默认1
billcode.cachemin=1
#设置租户模式，1：友互通 2：营销云(默认)
billcode.tenantmode=1
#找不到编码规则时默认自动编号
billcode.nobillnumber.showdefault=true

#默认租户的信息
#tenant_gb0ucj8l
jdbc.catalog=dynamic_ds
ds.app=diwork
ds.business=defaultbusi
#配置数据源前缀
jdbc.prefix=tenant_

# 接协同的流程
bpmrest.server=@bpmrest.server@
bpmrest.tenant=@bpmrest.tenant@
bpmrest.token=@bpmrest.token@
bpmrest.billtypeSubid=@engineCode@
bpmrest.appsource=@bpmrest.appsource@
bpmrest.completeUrl=@bpmrest.completeUrl@
bpmrest.frontUrl=@bpmrest.frontUrl@
bpmrest.callbackToken=mddcallback
bpmrest.checkToken =false

yonsciprt.bpmrest.server=@bpmrest.server@/ubpm-web-rest
yonsciprt.bpmrest.tenant=@bpmrest.tenant@
yonsciprt.bpmrest.token=@bpmrest.token@
yonsciprt.bpmrest.souce=@bpmrest.appsource@


#dubbo 基本配置
dubbo.application=developplatform
registry-protocol=zookeeper
dubbo-protocol=20881
dubbo.group=developplatform
# 启动动态数据源 [true: 启用|false:关闭]
mdd.dynamicDataSource=false

# meta 元数据 测试daily 形式配置
metadata.api.url=@metadata.api.domain@
#缓存通知配置
pipelinecode=@metadata.pipelinecode@
# 重新开启实体元数据本地缓存 600s
metadata.cache.timeout=72000
metadata.cache.maximumsize=500000

metadata.ui.url=@uimetadata.domain@
#自定义的AutoCode接口fullname
autocode.itf.fullname=ucfbase.ucfbaseItf.IAutoCode

mdd.i18n.enable=true

mdd.mullang.domain.url=@mdd.mullang.domain.url@

# Graphql
mdd.query.entity.byId=${metadata.api.url}/entity/getbyid?id={0}&tenantId={1}
mdd.query.entity.batchById=${metadata.api.url}/class/ids
mdd.query.enum.byId=${metadata.api.url}/enum/getbyid?id={0}&tenantId={1}
mdd.query.component.byAppid=${metadata.api.url}/component/full/appids/{0}

validate.token=12345
api.key=1
api.secret=1

#========================================yonscript配置=============================================
#外部调试器服务地址
J2V8_DEBUGER_HOST= @J2V8_DEBUGER_HOST@
#j2v8 debug server 超时时间ms 10min
J2V8_DEBUGER_TIMEOUT = 600000
hpapaas-passport-be.host=@passport.domain@
#调试服务上线后通知hpapaas平台的url接口
debugInfoUrl=${hpapaas-passport-be.host}/j2v8debug/debugonline
#调试句柄过期时间（秒）每个句柄一小时的占用时间
debug_handler_expire=3600
#调试句柄标记使用的redis
redis_url=direct://@spring.redis.host@:@spring.redis.port@?poolSize=50&poolName=mypool&password=@spring.redis.password@

#========================================yonscript配置结束=============================================
billcode.bizsqlsession=mddBizSqlSession
billcode.uimetasqlsession=sqlSession
ucf.enableExcepthonHandler=false

passport.script.base.url=${hpapaas-passport-be.host}/scriptfetch
passport.script.version.url=${passport.script.base.url}/findFileVersion?id=
passport.script.content.url=${passport.script.base.url}/findFileContent?id=
passport.script.content.pid.url=${passport.script.base.url}/findSingleFileForEngine?id=

#hpapaasScriptDev
#hpapaasScriptCacheDev
#hpapaasScriptDaliy
#hpapaasScriptCacheDaliy
#hpapaasScriptOnline
#hpapaasScriptCacheOnline
iuap.script.pipeline=hpapaasScriptDev
iuap.script.pipeline.cache=hpapaasScriptCacheDev

diwork.oauth.paramName=code
diwork.oauth.inApiHost=@diwork.oauth.inApiHost@
diwork.oauth.token=@diwork.oauth.token@
diwork.oauth.agent_id=@diwork.oauth.agent_id@
diwork.oauth.version=@diwork.oauth.version@
diwork.oauth.salt=@diwork.oauth.salt@

# 打印服务鉴权文件: linux和mac直接创建指定文件; windows 在idea或eclipse安装目录所在磁盘分区的根路径创建app目录
u8cprint.client.credential.path=printauth.properties
print.client.credential.path=printauth.properties
print.entrance.name=@print.entrance.name@
print.server.name=@print.server.name@
printBaseUrl=@printBaseUrl@
UAP.AUTH.ALG=HMAC
UAP.KDF.PRF=HmacSHA1


mdf.mobile.yhtTokenPrivateKey=@mdf.mobile.yhtTokenPrivateKey@
mdf.mobile.appMenuListHost=${hpapaas-passport-be.host}

#bizflow
bizFlow.url=@bizFlow.url@
bizFlow.contextUrl=@bizFlow.contextUrl@


mdd.data.permissions.enable=true
mdd.org.permissions.enable=true
mdd.func.permissions.enable=true
mdd.func.aop.skip=true

operationLog.url=@operationLog.domain@/log-pub/rest/operation/save
systemCode=developplatform
systemName=应用构建
ds.forceFetchSchemaFromDB=true
# 启用租户级参照
mdd.tenantref.enable=true

openYht=true
base.domain=productcenter
#配置仅使用友互通租户， 表中使用的租户id 为String类型
onlyUseYhtTenant=true
#动态数据源无需使用ext的AppContext
ds.useAppContext=false

mdd.uimeta.prop.isMetaServer=true
mdd.ui.tpl.domain=@uimetadata.domain@/mdf

#员工组织信息地址
ucf_staff_center=@ucf_staff_center@

tree.itf.fullname=ucfbase.ucfbaseItf.ITree


# 编码规则如果没有预制候选属性，可以直接显示UI元数据里的候选属性
billcode.noprefabricate.showUImeta=true

# redis缓存key 前缀根据各自业务写唯一标识
mdd.rule.prop.ruleListCachePrefix=@engineCode@
# 是否应用redis 外部缓存
mdd.rule.prop.isRedisCache=false
# 是否应用 上下文缓存
mdd.rule.prop.isContextCache=false

baseapi.url=@baseapi.url@
# redisManager默认使用的index
redis.mainIndex=1
redis.pub.mainIndex=0

passpassport_spend_time=${hpapaas-passport-be.host}/yonscript/save

# 专属化需要指定多语服务域名
ml.remote.server.url=@uimetadata.domain@

ublinker.env=pre

runtime.server.url=http://wl520test.dev.app.yyuap.com
# 协同文件服务域名
mdd.filelist.url=@uimetadata.domain@

# 公有云mdf在协同对应的appCode
# mdf.appcode=mdf-runtime

registry=@registry@
iris.serviceUrl.defaultZone=@iris_serviceUrl_defaultZone@
app_metainfo_inotify_push_server=@app_metainfo_inotify_push_server@
app_metainfo_inotify_pusher=@app_metainfo_inotify_pusher@
zklock.url=@zk.host@
zookeeper-address=@zk.host@
